<article>

    <h2 id="xii_admin_processes">XII. Admin processes</h2>

    <h3 id="run_adminmanagement_tasks_as_oneoff_processes">Run admin/management tasks as one-off processes</h3>

    <p>The
        <a href="./concurrency">process formation</a> is the array of processes that are used to do the app’s regular business (such as handling
        web requests) as it runs. Separately, developers will often wish to do one-off administrative or maintenance tasks
        for the app, such as:</p>

    <ul>
        <li>Running database migrations (e.g.
            <code>manage.py migrate</code> in Django,
            <code>rake db:migrate</code> in Rails).</li>

        <li>Running a console (also known as a
            <a href="http://en.wikipedia.org/wiki/Read-eval-print_loop" target="_blank">REPL</a> shell) to run arbitrary code or inspect the app’s models against the live database. Most languages provide
            a REPL by running the interpreter without any arguments (e.g.
            <code>python</code> or
            <code>perl</code>) or in some cases have a separate command (e.g.
            <code>irb</code> for Ruby,
            <code>rails console</code> for Rails).</li>

        <li>Running one-time scripts committed into the app’s repo (e.g.
            <code>php scripts/fix_bad_records.php</code>).</li>
    </ul>

    <p>One-off admin processes should be run in an identical environment as the regular
        <a href="./processes">long-running processes</a> of the app. They run against a
        <a href="./build-release-run">release</a>, using the same
        <a href="./codebase">codebase</a> and
        <a href="./config">config</a> as any process run against that release. Admin code must ship with application code to avoid synchronization
        issues.</p>

    <p>The same
        <a href="./dependencies">dependency isolation</a> techniques should be used on all process types. For example, if the Ruby web process uses
        the command
        <code>bundle exec thin start</code>, then a database migration should use
        <code>bundle exec rake db:migrate</code>. Likewise, a Python program using Virtualenv should use the vendored
        <code>bin/python</code> for running both the Tornado webserver and any
        <code>manage.py</code> admin processes.</p>

    <p>Twelve-factor strongly favors languages which provide a REPL shell out of the box, and which make it easy to run one-off
        scripts. In a local deploy, developers invoke one-off admin processes by a direct shell command inside the app’s
        checkout directory. In a production deploy, developers can use ssh or other remote command execution mechanism provided
        by that deploy’s execution environment to run such a process.</p>

</article>
